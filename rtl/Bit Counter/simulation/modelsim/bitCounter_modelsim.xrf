vendor_name = ModelSim
source_file = 1, /home/gustavo/Documentos/DDLS/rtl/Bit Counter/bitCounter.sv
source_file = 1, /home/gustavo/Documentos/DDLS/rtl/Bit Counter/Teste1.vwf
source_file = 1, /home/gustavo/Documentos/DDLS/rtl/DDLS_if.sv
source_file = 1, /home/gustavo/Documentos/DDLS/rtl/Bit Counter/db/bitCounter.cbx.xml
design_name = bitCounter
instance = comp, \iter.DataOut[0]~output , iter.DataOut[0]~output, bitCounter, 1
instance = comp, \iter.DataOut[1]~output , iter.DataOut[1]~output, bitCounter, 1
instance = comp, \iter.DataOut[2]~output , iter.DataOut[2]~output, bitCounter, 1
instance = comp, \iter.DataOut[3]~output , iter.DataOut[3]~output, bitCounter, 1
instance = comp, \iter.DataOut[4]~output , iter.DataOut[4]~output, bitCounter, 1
instance = comp, \iter.DataOut[5]~output , iter.DataOut[5]~output, bitCounter, 1
instance = comp, \iter.DataOut[6]~output , iter.DataOut[6]~output, bitCounter, 1
instance = comp, \iter.DataOut[7]~output , iter.DataOut[7]~output, bitCounter, 1
instance = comp, \iter.Ready~output , iter.Ready~output, bitCounter, 1
instance = comp, \iter.clk~input , iter.clk~input, bitCounter, 1
instance = comp, \iter.clk~inputCLKENA0 , iter.clk~inputCLKENA0, bitCounter, 1
instance = comp, \iter.rst~input , iter.rst~input, bitCounter, 1
instance = comp, \iter.DataIn[7]~input , iter.DataIn[7]~input, bitCounter, 1
instance = comp, \iter.Valid~input , iter.Valid~input, bitCounter, 1
instance = comp, \posCounter~2 , posCounter~2, bitCounter, 1
instance = comp, \posCounter[1]~1 , posCounter[1]~1, bitCounter, 1
instance = comp, \posCounter[0] , posCounter[0], bitCounter, 1
instance = comp, \posCounter~3 , posCounter~3, bitCounter, 1
instance = comp, \posCounter[1] , posCounter[1], bitCounter, 1
instance = comp, \posCounter~0 , posCounter~0, bitCounter, 1
instance = comp, \posCounter[2] , posCounter[2], bitCounter, 1
instance = comp, \Ready~0 , Ready~0, bitCounter, 1
instance = comp, \iter.Ready~reg0 , iter.Ready~reg0, bitCounter, 1
instance = comp, \word[0]~0 , word[0]~0, bitCounter, 1
instance = comp, \word[7] , word[7], bitCounter, 1
instance = comp, \iter.DataIn[5]~input , iter.DataIn[5]~input, bitCounter, 1
instance = comp, \word[5] , word[5], bitCounter, 1
instance = comp, \iter.DataIn[6]~input , iter.DataIn[6]~input, bitCounter, 1
instance = comp, \word[6] , word[6], bitCounter, 1
instance = comp, \iter.DataIn[3]~input , iter.DataIn[3]~input, bitCounter, 1
instance = comp, \word[3]~feeder , word[3]~feeder, bitCounter, 1
instance = comp, \word[3] , word[3], bitCounter, 1
instance = comp, \iter.DataIn[2]~input , iter.DataIn[2]~input, bitCounter, 1
instance = comp, \word[2] , word[2], bitCounter, 1
instance = comp, \iter.DataIn[1]~input , iter.DataIn[1]~input, bitCounter, 1
instance = comp, \word[1] , word[1], bitCounter, 1
instance = comp, \iter.DataIn[0]~input , iter.DataIn[0]~input, bitCounter, 1
instance = comp, \word[0] , word[0], bitCounter, 1
instance = comp, \Mux0~4 , Mux0~4, bitCounter, 1
instance = comp, \iter.DataIn[4]~input , iter.DataIn[4]~input, bitCounter, 1
instance = comp, \word[4] , word[4], bitCounter, 1
instance = comp, \Mux0~0 , Mux0~0, bitCounter, 1
instance = comp, \LessThan0~0 , LessThan0~0, bitCounter, 1
instance = comp, \counterBits~0 , counterBits~0, bitCounter, 1
instance = comp, \counterBits[3]~1 , counterBits[3]~1, bitCounter, 1
instance = comp, \counterBits[0] , counterBits[0], bitCounter, 1
instance = comp, \DataOut~0 , DataOut~0, bitCounter, 1
instance = comp, \iter.DataOut[1]~0 , iter.DataOut[1]~0, bitCounter, 1
instance = comp, \iter.DataOut[0]~reg0 , iter.DataOut[0]~reg0, bitCounter, 1
instance = comp, \posCounter~4 , posCounter~4, bitCounter, 1
instance = comp, \counterBits~2 , counterBits~2, bitCounter, 1
instance = comp, \counterBits[1] , counterBits[1], bitCounter, 1
instance = comp, \DataOut~1 , DataOut~1, bitCounter, 1
instance = comp, \iter.DataOut[1]~reg0 , iter.DataOut[1]~reg0, bitCounter, 1
instance = comp, \counterBits~3 , counterBits~3, bitCounter, 1
instance = comp, \counterBits[2] , counterBits[2], bitCounter, 1
instance = comp, \DataOut~2 , DataOut~2, bitCounter, 1
instance = comp, \iter.DataOut[2]~reg0 , iter.DataOut[2]~reg0, bitCounter, 1
instance = comp, \counterBits~4 , counterBits~4, bitCounter, 1
instance = comp, \counterBits~5 , counterBits~5, bitCounter, 1
instance = comp, \counterBits[3] , counterBits[3], bitCounter, 1
instance = comp, \DataOut~3 , DataOut~3, bitCounter, 1
instance = comp, \iter.DataOut[3]~reg0 , iter.DataOut[3]~reg0, bitCounter, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, bitCounter, 1
